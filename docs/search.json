[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Swiss Health Registry - Yearly report 2023",
    "section": "",
    "text": "My work involves creating reproducible reports using our medical registry data. Typically, we create two types of reports: ‘registry reports,’ which utilize descriptive statistics from the entire registry, and ‘clinic reports,’ which compare data from one clinic to the aggregated data of all other clinics. Until now, we have been utilizing the statistical software package ‘STATA.’ While STATA allows for reproducible reporting, the project setup process is laborious, and it lacks flexibility in choosing the output format.\nRStudio, an open-source statistical package widely used in biomedical research, offers an alternative. Its package called ‘QUARTO’ promises to provide a simpler way of creating reproducible reports with multiple options for output formats.\n\n\nAim of this project is to assess the potential of Rstudio’s ‘QUARTO’-package for reproducible reporting of registry data.\n\n\n\nDummy data was obtained using the ‘Framingam’ data set (‘riskCommunicator’-package). Dummy department_IDs were created. Please refer to the QUARTO-file for the code."
  },
  {
    "objectID": "index.html#background",
    "href": "index.html#background",
    "title": "Swiss Health Registry - Yearly report 2023",
    "section": "",
    "text": "My work involves creating reproducible reports using our medical registry data. Typically, we create two types of reports: ‘registry reports,’ which utilize descriptive statistics from the entire registry, and ‘clinic reports,’ which compare data from one clinic to the aggregated data of all other clinics. Until now, we have been utilizing the statistical software package ‘STATA.’ While STATA allows for reproducible reporting, the project setup process is laborious, and it lacks flexibility in choosing the output format.\nRStudio, an open-source statistical package widely used in biomedical research, offers an alternative. Its package called ‘QUARTO’ promises to provide a simpler way of creating reproducible reports with multiple options for output formats.\n\n\nAim of this project is to assess the potential of Rstudio’s ‘QUARTO’-package for reproducible reporting of registry data.\n\n\n\nDummy data was obtained using the ‘Framingam’ data set (‘riskCommunicator’-package). Dummy department_IDs were created. Please refer to the QUARTO-file for the code."
  },
  {
    "objectID": "index.html#table-1.1-overview-registry-report",
    "href": "index.html#table-1.1-overview-registry-report",
    "title": "Swiss Health Registry - Yearly report 2023",
    "section": "Table 1.1 Overview: Registry report",
    "text": "Table 1.1 Overview: Registry report\nUsing the ‘tidyverse’-package ‘gtsummary’, an overview-table can be created easily:\n\nlibrary(gtsummary)\nlibrary(dplyr)\ndb |&gt;\n  dplyr::select(sex, age, bmi, cursmoke, prevhyp, diabetes,) |&gt;\n  tbl_summary(\n    type = all_continuous() ~ \"continuous2\",\n    label = list(age ~ \"Age [y]\",\n                 bmi ~ \"BMI [kg/m^2]\",\n                 cursmoke ~ \"currently smoking\",\n                 prevhyp ~ \"Hypertension\",\n                 diabetes ~ \"Diabetes\"),\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\",\n                                     \"{median} ({p25}, {p75})\",\n                                     \"{min}, {max}\")\n  )\n\n\n\n\n\n\n\n\nCharacteristic\nN = 4,4341\n\n\n\n\nsex\n\n\n\n    f\n1,944 (44%)\n\n\n    m\n2,490 (56%)\n\n\nAge [y]\n\n\n\n    Mean (SD)\n50 (9)\n\n\n    Median (IQR)\n49 (42, 57)\n\n\n    Range\n32, 70\n\n\nBMI [kg/m^2]\n\n\n\n    Mean (SD)\n25.8 (4.1)\n\n\n    Median (IQR)\n25.4 (23.1, 28.1)\n\n\n    Range\n15.5, 56.8\n\n\n    Unknown\n19\n\n\ncurrently smoking\n2,181 (49%)\n\n\nHypertension\n1,430 (32%)\n\n\nDiabetes\n121 (2.7%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\nNote: I am impressed! - using Stata it would cost me hundreds of lines creating such a table. Interestingly, the source code of “tbl_summary” is not that long: https://rdrr.io/cran/gtsummary/src/R/tbl_summary.R."
  },
  {
    "objectID": "index.html#table-1.2-overview-clinic-report",
    "href": "index.html#table-1.2-overview-clinic-report",
    "title": "Swiss Health Registry - Yearly report 2023",
    "section": "Table 1.2 Overview: Clinic report",
    "text": "Table 1.2 Overview: Clinic report\nThe table above can easily be adapted to create an overview for a Clinic report simply by adding “by clinic” to the code. Furthermore, the option “p-value” is added:\n\n\n\n\n\n\n\n\n\nCharacteristic\nmy clinic, N = 1861\nall other clinics, N = 4,2481\np-value2\n\n\n\n\nsex\n\n\n0.3\n\n\n    f\n75 (40%)\n1,869 (44%)\n\n\n\n    m\n111 (60%)\n2,379 (56%)\n\n\n\nAge [y]\n\n\n0.056\n\n\n    Mean (SD)\n51 (9)\n50 (9)\n\n\n\n    Median (IQR)\n51 (44, 58)\n49 (42, 57)\n\n\n\n    Range\n35, 67\n32, 70\n\n\n\nBMI [kg/m^2]\n\n\n0.6\n\n\n    Mean (SD)\n25.7 (4.1)\n25.9 (4.1)\n\n\n\n    Median (IQR)\n25.1 (23.1, 28.2)\n25.5 (23.1, 28.1)\n\n\n\n    Range\n15.5, 39.5\n16.0, 56.8\n\n\n\n    Unknown\n0\n19\n\n\n\ncurrently smoking\n85 (46%)\n2,096 (49%)\n0.3\n\n\nHypertension\n59 (32%)\n1,371 (32%)\n0.9\n\n\nDiabetes\n11 (5.9%)\n110 (2.6%)\n0.006\n\n\n\n1 n (%)\n\n\n2 Pearson's Chi-squared test; Wilcoxon rank sum test\n\n\n\n\n\n\n\n\n\n\nNote 1: p-values only provide indications of potential differences between my clinic and all other clinics. No correction for repeated testing has been performed.\n\n\n\n\n*Note2: p-values are calculated using the default-options. For an actual report I may consider using t-test e.g. if N&gt;100 vs. Wilcoxon-test for 10&lt;N&lt;100. Of course this needs to be programmed flexibly as I do not have a-priori knowledge of N."
  },
  {
    "objectID": "index.html#graph-2.1.-density-plot-of-age",
    "href": "index.html#graph-2.1.-density-plot-of-age",
    "title": "Swiss Health Registry - Yearly report 2023",
    "section": "Graph 2.1. Density plot of age",
    "text": "Graph 2.1. Density plot of age\nA density plot of the age-distribution in my clinic vs. all other clinics is shown below:\n\nlibrary(gtsummary)  \n# ##### add a density-plot of the variable age:\ndb |&gt;\n  dplyr::select(age,clinic) |&gt;\n\n  ggplot(aes(x = age, fill = clinic)) +\n    geom_density(alpha = 0.5) +\n    xlab(\"Age\") +\n    ylab(\"Density\") +\n    ggtitle(\"Density Plot of Age by Clinic\") +\n    scale_fill_brewer(palette = \"Set2\") +\n    theme_minimal()"
  },
  {
    "objectID": "index.html#data-exploration",
    "href": "index.html#data-exploration",
    "title": "Swiss Health Registry - Yearly report 2023",
    "section": "3 Data exploration",
    "text": "3 Data exploration\n\n3.1 Methods\nOne could now do a t-test for age between the two groups “my clinic” vs. “all other clinics”. Since this is not very interesting, the following is done instead: Quartiles of BMI are created. Thereafter the hypothesis will be tested that systolic blood pressure (sysbp) is different in the highest vs. lowest quartile of BMI. This will be done for the entire registry (chaptr. 3.2) and for “my clinic” only (chaptr. 3.3).\n\n\n3.2.1 box-plot of systolic bp\nA box-plot of sysbp for quartiles 1 and 4 of BMI is shown below.\n\nlibrary(dplyr)\nlibrary(rstatix)\n\n\nAttache Paket: 'rstatix'\n\n\nDas folgende Objekt ist maskiert 'package:stats':\n\n    filter\n\n#str(db)\ndb|&gt;\n  mutate(bmi_group = ntile(bmi, 4)) |&gt; ## does it what I expect? i.e. generate  --&gt; should be tested...\n  dplyr::filter(bmi_group == 1 | bmi_group == 4) |&gt;\n  ggplot(aes(x = as.factor(bmi_group), y = sysbp)) +\n  geom_boxplot() +\n  xlab(\"BMI Group\") +\n  ylab(\"Systolic blood pressure [mmHg]\") +\n  ggtitle(\"Boxplot of BMI in the lowest and highest quartile of bmi\")  +\n  theme_minimal()\n\n\n\n\nThe graph indeed indicates that there may be a significant (and potentially relevant) difference between the two groups. Let’s do a t-test.\n\n\n3.2.2 t-test (entire registry data)\nSince the number of observations is relatively high in both groups, a t-test can be performed (central limit theorem).\n\n#table(db$bmi_group)\n# if I do this for the entire registry, I am safe, the numbers are high...\n\n### hypothesis: the sysbp is different in the group of the highest and lowest bmi:\n#### I am now doing a t-test:\n\n#?t_test\n\ndb|&gt;\n  mutate(bmi_group = ntile(bmi, 4)) |&gt; ## does it what I expect? i.e. generate quartiles  --&gt; should be tested...\n  dplyr::filter(bmi_group == 1 | bmi_group == 4) |&gt;\n  # Two-samples unpaired test\n  #:::::::::::::::::::::::::::::::::::::::::\n  t_test(sysbp ~ bmi_group)\n\n# A tibble: 1 x 8\n  .y.   group1 group2    n1    n2 statistic    df        p\n* &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n1 sysbp 1      4       1104  1103     -18.5 2130. 1.17e-70\n\n\nIndeed, the p-value of 1.17e-70 indicates extremely strong evidence against the null hypothesis of equal means across groups. Therefore, the observed difference is highly significant."
  },
  {
    "objectID": "index.html#analysis-of-sysbp-within-my-clinic",
    "href": "index.html#analysis-of-sysbp-within-my-clinic",
    "title": "Swiss Health Registry - Yearly report 2023",
    "section": "3.3 Analysis of sysbp within “my clinic”",
    "text": "3.3 Analysis of sysbp within “my clinic”\nIn the following, the same hypothesis will be tested for the reduced data set of “my clinic”. It is anticipated that due to the lower number of observations and therefore increased likeliness of non-normal data distribution, non-parametric tests will have to be applied.\n\n3.3.1 Histogram and qqplot within “my clinic”\nIn the following, the histograms and qqplots for both groups, first and fourth quartile of BMI, are shown:\n\n#str(db)\n#table(db$clinic)\n\ndb_clin&lt;- db |&gt;\n  dplyr::filter(clinic == \"my clinic\") |&gt;  # apparently, I have to use the label of the factor...\n  mutate(bmi_group = ntile(bmi, 4)) |&gt; ## does it what I expect? i.e. generate quartiles of bmi  --&gt; should be tested...\n  dplyr::filter(bmi_group == 1 | bmi_group == 4)\n#table(db_clin$bmi_group)\n#str(db_clin)\n\n### now I have a a dataset with lower n..\n# --&gt; let's make a histogram across groups\n\ndb_clin %&gt;%\n  ggplot(aes(sysbp)) +\n  geom_histogram(bins = 16, alpha=0.5) +\n  xlab(\"Systolic blood pressure [mmHg]\") +\n  ylab(\"Count\") +\n  ggtitle(\"Histogram of Systolic Blood Pressure\") +\n  theme_minimal() +\n  facet_wrap(~ bmi_group, labeller = labeller(bmi_group = c(\"1\" = \"1st BMI-quartile\", \"4\" = \" 4th BMI-quartile\")))\n\n\n\n###\n\n### qqplot\n# library(ggplot2)\n# library(dplyr)\n\ndb_clin %&gt;%\n  ggplot(aes(sample = sysbp)) +\n  geom_qq() +\n  geom_qq_line(distribution = stats::qnorm) +\n  xlab(\"Theoretical Quantiles\") +\n  ylab(\"Sample Quantiles\") +\n  ggtitle(\"QQ Plot of Systolic Blood Pressure\") +\n  theme_minimal() +\n  facet_wrap(~ bmi_group, labeller = labeller(bmi_group = c(\"1\" = \"1st quartile of BMI\", \"4\" = \" 4th quartile of BMI\")))  \n\n\n\n\nThe graphs indicate that the data is not uniformly distributed, particularly for the 4th BMI quartile, where the distribution of sysbp appears to be right-skewed. To test this hypothesis, a Shapiro test is performed.\n\n\n3.3.2 Shapiro-test\n\n### normality-test:\n# remember: Ho: normal distribution\n#db_clin %&gt;%\n#  shapiro_test(sysbp)\n\n### test: for-loop:\ndb_clin &lt;- arrange(db_clin, bmi_group)\ngroups &lt;- unique(db_clin$bmi_group) # this will create a vector. How can I change the order? --&gt; by ordering the data first ;-) \n\ncounter &lt;- 0\nfor (group in groups) {\n  counter &lt;- counter + 1\n  #print(paste(\"Printing group:\", group))\n  #print(paste(\"Printing counter:\", counter))\n  \n  df_name &lt;- paste(\"db_clin_\", counter, sep = \"\") # this concatenates\n  assign(df_name, db_clin %&gt;% # assigns a value to a name..\n           filter(bmi_group == group))\n  # Perform Shapiro-Wilk test on sysbp variable for each data frame\n  shapiro_result &lt;- shapiro_test(get(df_name)$sysbp)\n  print(paste(\"Shapiro-Wilk test result for\", df_name))\n  print(shapiro_result)\n}  \n\n[1] \"Shapiro-Wilk test result for db_clin_1\"\n# A tibble: 1 x 3\n  variable           statistic p.value\n  &lt;chr&gt;                  &lt;dbl&gt;   &lt;dbl&gt;\n1 get(df_name)$sysbp     0.970   0.268\n[1] \"Shapiro-Wilk test result for db_clin_2\"\n# A tibble: 1 x 3\n  variable           statistic p.value\n  &lt;chr&gt;                  &lt;dbl&gt;   &lt;dbl&gt;\n1 get(df_name)$sysbp     0.927 0.00646\n\n# --&gt; since the p-value of one group and both groups together is not in agreement with the H0, I will now perform a non-parametric test.\n\n\n\nNote: the Shapiro-test has been performed twice using a for-loop. In the output above “db_clin_1” refers to the first quartile of BMI, “db_clin_2” refers to the 4th quartile of BMI.\n\n\nFor the group with the highest BMI, we obtain a highly significant test-result. This means that the present distribution of data is very unlikely under the null hypothesis of normal distribution. Therefore, the non-parametric Wilcoxon-test is performed.\n\n\n3.3.3 Wilcoxon-Test\n\ndb_clin %&gt;%\n  wilcox_test(sysbp ~ bmi_group)\n\n# A tibble: 1 x 7\n  .y.   group1 group2    n1    n2 statistic         p\n* &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 sysbp 1      4         47    46       508 0.0000108\n\n\nAlso in this reduced data-set of “my clinic”, using the non-parametric Wilcoxon-test, a highly significant p-value suggests a highly significant difference between the two groups."
  },
  {
    "objectID": "index.html#preliminary-conclusion-and-outlook",
    "href": "index.html#preliminary-conclusion-and-outlook",
    "title": "Swiss Health Registry - Yearly report 2023",
    "section": "Preliminary conclusion and outlook",
    "text": "Preliminary conclusion and outlook\nSimple reproducible reports can easily be implemented using ‘QUARTO’. One of the next steps is the automated creation of clinic reports using loops (or the mapping functions of the ‘purrr’ package)."
  }
]